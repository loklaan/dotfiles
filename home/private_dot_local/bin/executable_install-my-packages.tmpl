#!/bin/sh

set -o errexit
set -o nounset

#/ Usage:
#/   my-install-packages [options]
#/   my-install-packages --gui
#/
#/ Description:
#/
#/ Options:
#/   --gui: Optional. Install GUI app packages in addition to CLI packages.
#/   --help: Display this help message
usage() { grep '^#/' "$0" | cut -c4- ; }
expr "$*" : ".*--help" > /dev/null && usage && exit 0

gui=false

while [ $# -gt 0 ]; do
  case "$1" in
    --gui)
      gui=true
      ;;
    *)
      echo "Invalid argument: $1"
      usage
      exit 1
  esac
  shift
done

main() {
  {{ if eq .chezmoi.os "darwin" }}

  PATH="$PATH:{{ .brewprefix }}/bin"

  {{ $brews := list
       "awscli"
       "bash"
       "coreutils"
       "deno"
       "ffmpeg"
       "flyctl"
       "git"
       "git-delta"
       "git-extras"
       "git-lfs"
       "gnupg"
       "go"
       "handbrake"
       "htop"
       "jq"
       "less"
       "lua"
       "make"
       "ncdu"
       "ncurses"
       "pinentry"
       "pinentry-mac"
       "pyenv"
       "readline"
       "rename"
       "rustup-init"
       "safe-rm"
       "shellcheck"
       "tmux"
       "tree"
       "wget"
       "wireguard-tools"
       "zsh" -}}
  {{ $casks := list
       "alfred"
       "bartender"
       "brave-browser"
       "docker"
       "figma"
       "finicky"
       "firefox"
       "fontgoggles"
       "glyphs"
       "google-chrome"
       "imageoptim"
       "insomnia"
       "iterm2"
       "jetbrains-toolbox"
       "kap"
       "logitune"
       "notion"
       "private-internet-access"
       "qlcolorcode"
       "qlimagesize"
       "qlmarkdown"
       "qlvideo"
       "quicklookase"
       "rectangle"
       "rive"
       "rocket"
       "slack"
       "spotify"
       "sublime-text"
       "visual-studio-code"
       "vlc" -}}
  {{ $goget := list
       "github.com/CtrlSpice/otel-desktop-viewer@latest"
       "github.com/equinix-labs/otel-cli@latest" -}}

  if ! command -v brew > /dev/null; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi

  # Brew managed programs/libraries
  brew bundle --no-lock --file=/dev/stdin <<EOF
{{ range ($brews | sortAlpha | uniq) -}}
brew {{ . | quote }}
{{ end -}}
EOF

  # Brew managed GUI
  if [ $gui == "true" ]; then
    brew bundle --no-lock --file=/dev/stdin <<EOF
{{ range ($casks | sortAlpha | uniq) -}}
cask {{ . | quote }}
{{ end -}}
EOF
  fi

  # Go built binaries
  {{ range ($casks | sortAlpha | uniq) -}}
  {{ $.brewprefix }}/bin/go install {{ . | quote }}
  {{ end -}}

  # The amazing fzf
  FZF_INSTALL="$HOME/.zshrc.d/plugins/fzf/install"
  if [[ -f "$FZF_INSTALL" ]]; then
    bash "$FZF_INSTALL"
  fi

  # Nodejs version manager
  PREFIX="$HOME/.n"
  if [[ ! -f "$PREFIX" ]]; then
    curl -L https://raw.githubusercontent.com/mklement0/n-install/stable/bin/n-install | N_PREFIX=~/.n bash -s -- -yn -
  fi

  echo "\nDone installing packages! Continue tool environment setup:

  Nodejs
    \$ n lts

  Rust/Cargo
    \$ rustup-init
"

  {{ else if eq .chezmoi.os "linux" -}}
    {{ $pkgs := list
    "awscli"
    "bash"
    "coreutils"
    "ffmpeg"
    "git"
    "git-extras"
    "git-lfs"
    "gnupg"
    "htop"
    "jq"
    "less"
    "make"
    "ncdu"
    "rename"
    "safe-rm"
    "shellcheck"
    "tmux"
    "tree"
    "wget"
    "wireguard-tools"
    "zsh" -}}

    # Disabling due to not being available in relevant distros
    # "deno"
    # "flyctl"
    # "git-delta"
    # "handbrake"
    # "lua"
    # "ncurses"
    # "pinentry"
    # "pinentry-mac"
    # "pyenv"
    # "readline"
    # "rustup-init"
    packages=$(cat <<EOF
{{ range ($pkgs | sortAlpha | uniq) -}}
  {{ . | quote }}
{{ end -}}
EOF
)

    {{ if eq .chezmoi.osRelease.id "ubuntu" -}}
    sudo apt update
    sudo apt install -y $(echo "$packages" | xargs)
    {{ else if eq .chezmoi.osRelease.id "fedora" -}}
    sudo dnf install -y $(echo "$packages" | xargs)
    {{ else if eq .chezmoi.osRelease.id "alpine" -}}
    sudo apk add $(echo "$packages" | xargs)
    {{ else }}
    echo "Not implemented for this Linux OS: {{ .chezmoi.os }} / {{ .chezmoi.osRelease.id }}"
    echo "Full release details from /etc/os-release:"
    cat /etc/os-release
    {{ end }}
  {{ else }}
  echo "Not implemented for this OS: {{ .chezmoi.os }}"
  {{ end }}
}

main "${@:-""}"
