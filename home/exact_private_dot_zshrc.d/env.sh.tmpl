#|------------------------------------------------------------|#
#| Env variables                                              |#
#|------------------------------------------------------------|#

# Locale
export LC_ALL=en_AU.UTF-8
export LANG=en_AU.UTF-8
export LANGUAGE=en_AU.UTF-8

# User
export DEFAULT_USER=loch
export EDITOR='idea --wait'

# Default pathing, autocompletes and manuals
export PATH="$HOME/.local/bin:{{ .brewprefix }}/sbin:{{ .brewprefix }}/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH"
fpath=(
  "$ZSH_CACHE_DIR/completions"
  "${HOME}/.local/share/zsh-completions"
  "{{ .brewprefix }}/share/zsh/site-functions"
  ${fpath}
)
manpath=(
  '{{ .brewprefix }}/share/man'
  {{ if eq .chezmoi.os "darwin" }}/Library/Developer/CommandLineTools/usr/share/man{{ end }}
  ${manpath}
)

ulimit -n 10240 # Raises the limit for open files, which is important for large git repos
bgnotify_threshold=8

# Iterm2 / tmux
export ITERM_ENABLE_SHELL_INTEGRATION_WITH_TMUX=YES

# Github tokens
export GITHUB_TOKEN={{ (bitwardenFields "item" "dotfiles").github_auth_token.value }}

# Homebrew
export HOMEBREW_GITHUB_API_TOKEN=$GITHUB_TOKEN
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_EMOJI=1
export HOMEBREW_NO_INSECURE_REDIRECT=1

# XDG
export XDG_CACHE_HOME="$HOME/Library/Caches"
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"

# Android studio
export ANDROID_HOME="$HOME/Library/Android/sdk"
export PATH="$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools:$PATH"

# Playdate SDK
export PLAYDATE_SDK_PATH="$HOME/Developer/PlaydateSDK"
export PATH="$PLAYDATE_SDK_PATH/bin:$PATH"

# Fly.io
export FLYCTL_INSTALL="$HOME/.fly"
export PATH="$FLYCTL_INSTALL/bin:$PATH"

# Project-based dev tool crap
if [ -f {{ .brewprefix }}/bin/mise ] && which mise >/dev/null; then
  eval "$(mise activate zsh)"
fi

# Node crap
export NODE_MAX_OLD_SPACE_SIZE=8192
export PNPM_HOME="$HOME/.local/share/pnpm"
case ":$PATH:" in # Lower priority
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
export N_PREFIX="$HOME/.n";
export PATH="./node_modules/.bin:$N_PREFIX/bin:$N_PREFIX/repo/bin:$PATH" # Higher priority

# Python crap
export PATH="$HOME/.gem/bin:$PATH"
if type pyenv > /dev/null; then eval "$(pyenv init -)"; fi

# Rust crap
export PATH="$HOME/.cargo/bin:$PATH"

# Php crap
export PATH="$HOME/.composer/vendor/bin:$PATH"

{{ if ne "" .emailWork -}}
# Canva-only
export JETBRAINS_LICENSE_SERVER=https://canva.fls.jetbrains.com/
[ -e "$HOME/.coder.sh" ] && . "$HOME/.coder.sh"
{{- end }}

# Nix
[[ ! $(command -v nix) && -e "/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh" ]] && source "/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh"

{{ if eq .chezmoi.os "linux" -}}
{{   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") -}}
# VcxSrv Display (WSL hosted UIs)
export DISPLAY=${DISPLAY:-$(grep -Po '(?<=nameserver ).*' /etc/resolv.conf):0}
{{   end -}}
{{- end -}}

#|------------------------------------------------------------|#
#| Env libraries                                              |#
#|------------------------------------------------------------|#

for lib in $HOME/.zshrc.d/lib/*.sh
do
  source $lib
done

#|------------------------------------------------------------|#
#| Env agents                                                 |#
#|------------------------------------------------------------|#

if typeset -f _ssh_agent > /dev/null; then
  _ssh_agent
fi
export GPG_TTY=$(tty)

#|------------------------------------------------------------|#
#| Env auto completions                                       |#
#|------------------------------------------------------------|#

_add_env_completions() {
  # AWS
  if [ -f {{ .brewprefix }}/bin/aws_completer ] && which aws >/dev/null; then
    complete -C '{{ .brewprefix }}/bin/aws_completer' aws;
  fi
  # Google Cloud
  if [ -f "{{ .brewprefix }}/share/google-cloud-sdk/completion.zsh.inc" ] && which gcloud >/dev/null; then
    source "{{ .brewprefix }}/share/google-cloud-sdk/completion.zsh.inc"
  fi
}
